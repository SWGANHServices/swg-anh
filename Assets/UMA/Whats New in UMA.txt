What's new in 2.10 

Minimum supported version is 2018.4
Requires .Net 4.X compatibility in player settings. 

Important: In this version, the DynamicAssetLoader is only kept for compatiblity with old projects. To use Asset Bundles, you should either use Addressables, or manually download them and load them into the library.

Support for Addressables
  Automated generation of addressables groups (including LOD slots)
  Automated labelling of indexed items by recipe (including LOD slots)
  Automated cleanup of slots/overlays/textures
  Significantly reduced memory overhead
  Build requests are queued up with all relevant data
  Added recipes to Addressables. If you do this, you must load them before access (they are all labelled by recipe and with 'UMA_Recipe')
  Will now Keep shared group on regeneration. 
  Can now filter on non-added recipes.
  Can now individually choose to add a recipe to addressables, or to update a recipe. 
  Plugin system to customize how addressables are generated.

New global library window
  New functions to mark items by various parameters
  New Addressables Menu to generate items
  New Ability to remove unused slots/overlays using the addressable groups (Remove Orphans). Requires generating labels from recipes.
  New Ability to remove items from library by dropping a folder onto the lib
  Repair function will now attempt to repair addressable item groups and labels
  Can view if an item is in resources, or addressable now
  Protected resource items from being deleted as orphans
Added a label field to recipes to allow the user to override addressable label names
Moved Mesh  Hide mask creation to mesh building, to address sync issues
Updated DNA checks to pull from global library instead of searching resources. Fixes an issue on android
When the animator is rebuilt, the layer weights are saved and restored now
LoadFromRecipeString now has a flag to clear the existing wardrobe when loading
Added SetRawColor function (and code) so you can pass in an OverlayColorData and the sytem won't monkey with it
UMAMaterial Changes
   Added checkbox to use the overlay multiplier color as the background for alpha blended overlays. 
   Added a multiplier to allow adjusting that color. This improves the look of hair (gets rid of banding on the edges)
   Added a "Non Shader Texture" flag to the texture channels. This allows a texture to be combined, but it will not be set on the material.
   Added menu option to convert all UMAMaterials to use LWRP/URP material property names. you will still need to run the unity update utility in addition to this.
Added Animation Clip Target Renamer to help with renaming targets for UMAs when the animation is broken
Reworked compatible races recipe loading, so they are figured out in the index at startup
Context changes
    Created a new UMAGlobalContext context that pulls everything from the global library. 
    (This removes the need for the various libraries - racelibrary, slotlibrary, etc.)
    All access to UMA data now goes through the contexts.
    Created new prefab UMA_GLIB using the global context. It is recommended to switch to this version in 2.10.
LOD Improvements
    Added "Maximum LOD Level" to SlotDataAsset, and Suppressed flag to SlotData for use by LOD systems
    Added "Use Slot Dropping" to UMASimpleLOD, this will suppress slots based on the fields above.
    By default, the eyebrows, eyelashes, and Inner Mouth are set to drop after LOD 0. Eyes are set to drop after LOD 1.
Ability to hide slots by Slot tag.
Added support for 32 bit index buffers (large meshes). To enable, add UMA_32BITBUFFERS to the player defines. This is experimental at this time.
Verify button in Slot Builder Window will detect UV Coordinates that are out of range.
Added Elf male and Elf female races with base race recipes.
CollisionMatrixFixer will read the current layermask settings for Ragdoll and NoCollisions, and use those if found.
Added "AutoSetLayers" property to UMAPhysicsAvatar. When set, the player layer will be the current gameobject layer, and the Ragdoll layer will be read from the layermask settings.
Added Shader Parameter Mapping to UMAMaterial - UMAMaterials can now map shared colors to color properties in the generated material. Useful for shaders that have extra color parms (like skin & hair shaders).
Added "AtlasResolutionScale" to DynamicCharacterAvatar. Using this, you can lower the atlas resolution for specific avatars, for example ones used for icons, etc. Warning: UMASimpleLOD can override this, so don't use in conjunction with that component.
Added "Resources Only" flag to UMA recipes. Checking this will skip adding this recipe, and it's slots, overlays and textures to Addressabe groups.
New Menuitem on UMA Menu: "WebGL/Enable Embedded Resources". This will turn on embedded resources in WebGL, allowing UMA to work right in WebGL.
Overlay coordinates can now be specified in UV range (0..1) in addition to absolute range. This should make it much easier to handle Unity converting textures to square on mobile, or the need to resize textures for performance.
New Detail Normal map texture channel type, allows combining of normal maps in UMAMaterials (standard renderer only at this point)
New Non-Shader texture channel type, allows a texture to be accumulated on the atlas, but not sent to a material. 
The first RuntimeAnimatorController for compatible races will now be added if a race specific controller is not found.
You can now pass a constructed DynamicCharacterAvatar to the UMARandomAvatar.Randomize() function to regenerate it randomly.
New scene ("OverlayAligner") to convert and adjust overlay coordinates visually. 
Performance improvements - up to a 5% increase in speed when building under 2019.3 due to boneweight optimizations.
Added support for more than 32 wardrobe slots (problem with Masked Field editor)
Added DefaultRendererAsset property to DynamicCharacterAvatar. This lets you set "UpdateWhenOffscreen", the renderer name, etc, for the default renderer. If you don't add a DCA Renderer Manager, or setup a Renderer Asset for a slot, this one will be used to set renderer properties.
Standard Races now use mecanim-friendly avatars by default

New "How To" scenes
 * How to construct a DCA from scratch
 * How to construct and load a DCA from a prefab
 * How to load and save a DCA to a string
 * How to use a slider to control DNA

Various bug fixes & changes
    Fixed various overlays that were missing textures or had the wrong count
    Fixed some scenes that had broken over time
    Sometimes a shader would not be compiled correctly.
    Reworked recipe editor and disallowed duplicate mesh hide assets.
    Fixed bug where you couldn't add a Wardrobe Collection using SetSlot before Start() was called on the DCA.
    Fixed bug in 2019.3 where it was not finding the type for RuntimeAnimatorController in build.
    Fixed bug where WardrobeCollections would end up indexed in multiple places
    If you supply an avatar and animator from the project, it will no longer attempt to delete the avatar when changing the race

Many more bugs/fixes/updates. 


What's new in 2.9
Renderer Manager - allow you to specify visibility, shadows of specific model parts.
Render Manager scene - hides head in world, but not in shadows, reflections
HDRP and LWRP compatibility. (Note: assets will need to be modified).
Option on Generator to force all pending UMA's to be built on the next frame.
Updated Documentation
Updated hair shaders for Smoother hair blending.
Two sample wardrobe items that modify the bone pose.
New menu item to generate all the Controller and Bone Pose DNA for the new Physique slot.
Various bug fixes/enhancements
    Character colors not saving in the recipe editor.
    infrequent DNA obj ref error when switching races.
	Will build from settings if invalid file or options specified.
	Keep Avatar option
	Ability to move InternalDataStore folder (name must remain the same, but location can change)
UMABoneCleaner - cleanup after adding extra bones
UMA Jiggle slots
UMA Sway Bone - for ponytails, etc.
New menu item to extract the Mecanim avatar from a UMA at runtime
Default Mecanim avatars added race folder
Experimental - Ability to specify position of overlay in Texture Atlas
Asmdef files moved to zip. Unzip to assets/UMA.



What's new in 2.8.1
Restructed files and folders.
Easier to delete examples.
Added Iterations to UMAGenerator to increase the number of avatars generated per frame.
Added ASMDEF files to speed compiles. (This is a 2017.3+ feature)
Various minor fixes and updates (new accessors, build issues fixed, etc).
Added DCA Randomizer and Random Crowd generator and scene.
Updated General Documentation.
Added Content Creation documentation.
Compatiblity changes for UMA Power Tools 2.8

What’s new in 2.8

New Features

Reworked Blendshapes, improved API, optimized.
Improved performance in expression player.
Ability to set texture properties on the UMMaterial (aniso level, trilinear filtering, mipmap bias).
Ability to downsample textures at atlas build time (in UMAMaterial).
Ability to hide any slot from a wardrobe (not just base slots)
Improved Physics Avatar.
UMAMeshData is now clonable
Fixed issue with removed slots when using MeshHideAssets
Cleaned up error reporting for duplicate bones
Support for UWP build using IL2CPP
Updated queue on hair shader and materials for improved look against skyboxes
Added Timeline Clips for Race, Colors, DNA, and Wardrobe
Mouse orbitor now takes a bone to look at (instead of a bone path)
Unity 2018.3 compatibility
New Dynamic DNA plugin framework
New scene with new Dynamic DNA (ElfOrAlien) showing Color DNA, Morph DNA, Bone DNA all in one.
Added spoiler to Car demo
DNAConverterController assets now replace the old DNABehaviour prefabs. A single DNA name can now be used to control multiple modifications to the avatar (Blendshapes, BonePoses, fading normal maps, changing colors and more!), Simpler to use and much faster!
Example scenes have been restructured to be easier to find.
Global library (UMAAssetIndexer) is now a ScriptableObject.
Improved raycasting when detecting occluded faces in Mesh Hide Asset editor.
Various warnings and errors if users do unexpected things (delete global lib, etc)
Various small fixes on some of the example scenes.
High poly models now use a bone pose for initial bone positions.
HumanMale, HumanFemale updated to use DNAConverterControllers. These should be the default races to use now.
Normal shader updated to combine normals at runtime using RGBA32 textures (default)
Developers can now add (and sell or distribute) new dna functionality for DNAConverterController using the new DynamicDNAPlugin API
and many more bug fixes and optimizations

Editor Improvements

Add race updater to update base race overlays to new materials
New editors for the new DNAConverterController
UMAGenerator atlas size is now a dropdown list
Added progress bar when adding items to Global Lib via drag/drop or rebuild.
Added Re-orderable list to Dynamic DNA
Lot of enhancements to the Mesh Hide system:
•	Ability to view and export UV map (With alpha for selected polys)
•	Ability to select base slots from dropdown.
•	Symmetry paint mode
Ability to create wardrobe recipes from hierarchy and slot builder
Tags editor to mass tag UMA assets (and remove UMA tags)
Copy/Paste DCA Wardrobe
Add progress bars to global library
Added TPose inspector
Menu item to create Dynamic DNA
Ability to edit edit multiple SlotdataAsset and OverlayDataAsset in the inspector
Morph DNA editor added
Scene Changes
New DCA Sample accessory mounting scene added
New Timeline sample scene showing how to morph, recolor, change sex, and change wardrobe.
Fixed small issue with not found colors in Asset Bundle scene
Help text added to most scenes
UNET has been deprecated, so the UNET networking scenes have been removed.
Minor scene fixes (remove warnings, fix missing prefab, remove extraneous components)

